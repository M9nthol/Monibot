from telebot import types
from sc_client import client
from stalcraft import LocalItem, Order, Sort
from main import bot

def create_armor_keyboard(chat_id, call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_hveteranarmor = types.InlineKeyboardButton(text="–í–µ—Ç–µ—Ä–∞–Ωüü£", callback_data="hveteran_armor")
    button_hmasterarmor = types.InlineKeyboardButton(text="–ú–∞—Å—Ç–µ—Äüî¥", callback_data="hmaster_armor")
    button_hlegendarmor = types.InlineKeyboardButton(text="–õ–µ–≥–µ–Ω–¥–∞üü°", callback_data="hlegend_armor")
    markup.add(button_hveteranarmor, button_hmasterarmor, button_hlegendarmor)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–Ω–≥ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –í–∞—Å –±—Ä–æ–Ω–∏:", reply_markup=markup)

def create_weapon_keyboard(chat_id, call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_hveteran = types.InlineKeyboardButton(text="–í–µ—Ç–µ—Ä–∞–Ωüü£", callback_data="hveteran_weapon")
    button_hmaster = types.InlineKeyboardButton(text="–ú–∞—Å—Ç–µ—Äüî¥", callback_data="hmaster_weapon")
    button_hlegend = types.InlineKeyboardButton(text="–õ–µ–≥–µ–Ω–¥–∞üü°", callback_data="hlegend_weapon")
    markup.add(button_hveteran, button_hmaster, button_hlegend)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–Ω–≥ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –í–∞—Å –æ—Ä—É–∂–∏—è:", reply_markup=markup)

def send_lot_info(chat_id, ITEM_ID, description, is_recommended=True):
    lots = client.auction(ITEM_ID).lots(limit=10, sort=Sort.BUYOUT_PRICE, order=Order.ASC, additional=True)

    message_text = f"–û–ø–∏—Å–∞–Ω–∏–µ –ª–æ—Ç–∞:\n{description}\n–°–æ–≤–µ—Ç: –∫ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ { '—Å–æ–≤–µ—Ç—É—é‚úÖ' if is_recommended else '–Ω–µ —Å–æ–≤–µ—Ç—É—é‚ùå' }\n\n"

    for lot in lots:
        start_time_str = lot.start_time.strftime('%Y-%m-%d %H:%M:%S')
        end_time_str = lot.end_time.strftime('%Y-%m-%d %H:%M:%S')
        formatted_start_price = "{:,.0f}".format(lot.start_price).replace(",", ".")
        formatted_buyout_price = "{:,.0f}".format(lot.buyout_price).replace(",", ".")
        seller_name = lot.additional.get('buyer', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')

        message_text += f"–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞üí∞: {formatted_start_price}\n–¶–µ–Ω–∞ –≤—ã–∫—É–ø–∞üí∏:{formatted_buyout_price}\n–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ—Ç–∞‚åöÔ∏è:{start_time_str}\n–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ª–æ—Ç–∞‚è±:{end_time_str}\n–ü—Ä–æ–¥–∞–≤–µ—Ü: {seller_name}\n\n"

    markup = types.InlineKeyboardMarkup(row_width=1)
    button_history = types.InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂", callback_data=f"{ITEM_ID.name}HISTORY")
    markup.add(button_history)

    bot.send_message(chat_id, message_text, reply_markup=markup)

def send_price_history(chat_id, ITEM_ID):
    try:
        price_history = client.auction(ITEM_ID).price_history(limit=50)

        message_text = f"–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂ {ITEM_ID.name}:\n\n"

        for price_entry in price_history:
            amount = price_entry.amount
            price = price_entry.price
            time_str = price_entry.time.strftime('%Y-%m-%d %H:%M:%S')
            formatted_price = "{:,}".format(price).replace(",", ".")

            message_text += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount}, –¶–µ–Ω–∞: {formatted_price}, –í—Ä–µ–º—è: {time_str}\n\n"
    except AttributeError:
        message_text = "–û—à–∏–±–∫–∞: –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."

    bot.send_message(chat_id, message_text)

@bot.callback_query_handler(func=lambda call: call.data == "harmor")
def handle_callback_query_harmor(call):
    chat_id = call.message.chat.id
    from auc import user_threads
    if chat_id in user_threads:
        bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id,
                         text="–í—ã —É–∂–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç–µ –ª–æ—Ç‚ùó\n–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–µ–∫—É—â–µ–≥–æ –ª–æ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–π.\n–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop")
        return
    create_armor_keyboard(chat_id, call)  # –ü–µ—Ä–µ–¥–∞–µ–º call

@bot.callback_query_handler(func=lambda call: call.data == "hweapon")
def handle_callback_query_hweapon(call):
    chat_id = call.message.chat.id
    from auc import user_threads
    if chat_id in user_threads:
        bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id,
                         text="–í—ã —É–∂–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç–µ –ª–æ—Ç‚ùó\n–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–µ–∫—É—â–µ–≥–æ –ª–æ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–π.\n–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop")
        return
    create_weapon_keyboard(chat_id, call)

@bot.callback_query_handler(func=lambda call: call.data.startswith("hveteran_weapon"))
def handle_callback_query_weapon_veteran_weapon(call):
    chat_id = call.message.chat.id

    markup = types.InlineKeyboardMarkup(row_width=1)
    button_hPSG = types.InlineKeyboardButton(text="HK PSG1", callback_data="hPSG")
    button_h94CB = types.InlineKeyboardButton(text="–°–í-98", callback_data="h94CB")
    button_haug9m = types.InlineKeyboardButton(text="AUG 9mm", callback_data="haug9m")
    button_hauga1 = types.InlineKeyboardButton(text="AUG A1", callback_data="hauga1")
    button_hauga2 = types.InlineKeyboardButton(text="AUG A2", callback_data="hauga2")
    button_hauga3 = types.InlineKeyboardButton(text="AUG A3", callback_data="hauga3")
    button_hmc116 = types.InlineKeyboardButton(text="–ú–¶-116–ú", callback_data="hmc116")
    button_hm1014 = types.InlineKeyboardButton(text="M1014 Breacher", callback_data="hBreacher")
    button_hshtorm = types.InlineKeyboardButton(text="–û–¶-14–ú –®—Ç–æ—Ä–º", callback_data="hshtorm")
    button_hrmo = types.InlineKeyboardButton(text="–†–ú–û-93", callback_data="hrmo")
    button_hrpk16 = types.InlineKeyboardButton(text="–†–ü–ö-16", callback_data="hrpk16")
    button_hsix = types.InlineKeyboardButton(text="Crye Precision SIX12", callback_data="hsix12")
    button_hak12 = types.InlineKeyboardButton(text="–ê–ö-12", callback_data="hak12")
    button_helb = types.InlineKeyboardButton(text="–≠–ª—å–±—Ä—É—Å", callback_data="helb")

    markup.add(button_hPSG, button_h94CB, button_haug9m, button_hauga1, button_hauga2, button_hauga3,
               button_hmc116, button_hm1014, button_hshtorm, button_hrmo, button_hrpk16,
               button_hsix, button_hak12, button_helb)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏ –æ—Ä—É–∂–∏–µ:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "hPSG")
def handle_callback_query_hPSG(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("HK PSG1"), "PSG- –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö —á–∞—Å—Ç–æ –ø–æ–∫—É–ø–∞–µ–º—ã—Ö –Ω–∞—á–∏–Ω–∞—é—â–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –Ω–∞ —é–∑. –ò–º–µ–µ—Ç –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –≤ –±–æ—é –Ω–∞ –≤–µ—Ç–µ—Ä–∞–Ω—Å–∫–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ —Å–µ–±—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç.")

@bot.callback_query_handler(func=lambda call: call.data == "h94CB")
def handle_callback_query_h94CB(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("SV-98"), "–°–í-98- –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö —á–∞—Å—Ç–æ –ø–æ–∫—É–ø–∞–µ–º—ã—Ö –Ω–∞—á–∏–Ω–∞—é—â–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –Ω–∞ —é–∑. –ò–º–µ–µ—Ç –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –≤ –±–æ—é –Ω–∞ –≤–µ—Ç–µ—Ä–∞–Ω—Å–∫–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ —Å–µ–±—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç.")

@bot.callback_query_handler(func=lambda call: call.data == "haug9m")
def handle_callback_query_haug9m(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Steyr AUG 9mm"), "AUG 9mm - –∞–≤—Ç–æ–º–∞—Ç,–∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –º–µ–Ω—è —è–≤–ª—è–µ—Ç—Å—è –æ—à–∏–±–∫–æ–π –Ω–æ–≤–∏—á–∫–∞. –ï–≥–æ —Ö–æ—Ç—å –∏ —á–∞—Å—Ç–æ –ø–æ–∫—É–ø–∞—é—Ç –Ω–∞—á–∏–Ω–∞—é—â–∏–µ, –∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ —Ä–∞–∑–±–∏—Ä–∞—é—Ç—Å—è –≤ –∏–≥—Ä–µ, –Ω–æ –±–æ–ª—å—à–µ 10 —à—Ç—É–∫ —è –±—ã –Ω–µ –±—Ä–∞–ª —Å—Ä–∞–∑—É. –°–∞–º –Ω–∞ —ç—Ç–æ–º –∞—É–≥–µ —Å–¥–µ–ª–∞–ª –æ–∫–æ–ª–æ 10 –º–∏–ª–ª–æ–Ω–æ–≤, —Å–∫—É–ø–∞—è –¥–µ—à–µ–≤–æ –æ–ø—Ç–æ–º.")

@bot.callback_query_handler(func=lambda call: call.data == "hauga1")
def handle_callback_query_hauga1(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Steyr AUG A1"), "AUG A1- –ø–æ–∂–∞–ª—É–π –∫–∞–∫ M4LB, —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –ª—É—á—à–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞, –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø—Ä–æ—Å–æ–º, –Ω–æ –ª—É—á—à–µ –ø–æ–¥–æ–º–Ω—ã–µ –ª–æ—Ç—ã –ø–æ–∫—É–ø–∞—Ç—å –æ–ø—Ç–æ–º.")

@bot.callback_query_handler(func=lambda call: call.data == "hauga2")
def handle_callback_query_hauga2(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Steyr AUG A2"), "AUG A2- –ø–æ–∂–∞–ª—É–π –∫–∞–∫ Aug A1, —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –ª—É—á—à–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞, –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø—Ä–æ—Å–æ–º, –Ω–æ –ª—É—á—à–µ –ø–æ–¥–æ–º–Ω—ã–µ –ª–æ—Ç—ã –ø–æ–∫—É–ø–∞—Ç—å –æ–ø—Ç–æ–º.")

@bot.callback_query_handler(func=lambda call: call.data == "hauga3")
def handle_callback_query_hauga3(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Steyr AUG A3"), "AUG A3- –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–Ω–∏–º–∞–ª –∑–∞—á–µ–º –ª—é–¥–∏ –ø–æ–∫—É–ø–∞—é—Ç –µ–≥–æ, –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ –µ–≥–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–≤–∞–ª, –Ω–∞ 1000 —Å–¥–µ–ª–æ–∫ –º–∞–∫—Å–∏–º—É–º 2-3 –±—ã–ª–∏ –∞—É–≥ –ê3.", is_recommended=False)

@bot.callback_query_handler(func=lambda call: call.data == "hmc116")
def handle_callback_query_hmc116(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("MTs-116M"), "–ú–¶-116–ú - —Å–∫–æ—Ä–æ—Å—Ç—Ä–µ–ª—å–Ω–µ–µ, —á–µ–º —Å–≤98 –∏–∑-–∑–∞ —á–µ–≥–æ –∏ —Å—Ç–æ–∏—Ç –¥–æ—Ä–æ–∂–µ. –û–Ω–∞ —Ö–æ—Ä–æ—à–∞ –∫–∞–∫ –¥–ª—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ, —Ç–∞–∫ –∏ –Ω–∞ —é–∑.")

@bot.callback_query_handler(func=lambda call: call.data == "hBreacher")
def handle_callback_query_hBreacher(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("M1014"), "–ù–µ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–≤–∞–ª –µ–≥–æ –∏ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Å—å, –Ω–æ —ç—Ç–æ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∞—è –∑–∞–º–µ–Ω–∞ –≤—Ç–æ—Ä–∏—á–Ω–æ–º—É –¥—Ä–æ–±–æ–≤–∏–∫—É –û—Ü-62, –ø–æ—ç—Ç–æ–º—É —Å–ø—Ä–æ—Å –Ω–∞ –Ω–µ–µ –µ—Å—Ç—å.")

@bot.callback_query_handler(func=lambda call: call.data == "hshtorm")
def handle_callback_query_hshtorm(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("OTs-14M Shtorm"), "–®—Ç–æ—Ä–º –≤—Å–µ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∏ –±—É–¥–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ø—Ä–æ—Å–æ–º —É –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤. –û–±–ª–∞–¥–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–º —Å–∫–æ—Ä–æ—Å—Ç—Ä–µ–ª–æ–º –∏ —É—Ä–æ–Ω–æ–º, –Ω–æ –ø–æ–∫–∞ –Ω–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–π. –î—É–º–∞—é –±—É–¥–µ—Ç —á—É—Ç—å –¥–æ—Ä–æ–∂–µ, –∫–æ–≥–¥–∞ —Å–¥–µ–ª–∞—é—Ç –∞–Ω–∏–º–∞—Ü–∏–∏.")

@bot.callback_query_handler(func=lambda call: call.data == "hrmo")
def handle_callback_query_hrmo(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("RMB-93"), "–≠—Ç–æ—Ç –¥—Ä–æ–±–æ–≤–∏–∫ –Ω–∞–±–∏—Ä–∞–µ—Ç —Å–µ–π—á–∞—Å –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å, –∏–±–æ —è–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–µ–π –∑–∞–º–µ–Ω–æ–π –ø—Ä–æ—Ç–µ–∫—Ç–µ –∏ –ê–ê-12.")

@bot.callback_query_handler(func=lambda call: call.data == "hrpk16")
def handle_callback_query_hrpk16(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("RPK-16"), "–†–ü–ö-16 —Ö–æ—Ä–æ—à–∏–π –ø—É–ª–µ–º–µ—Ç, —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–¥–∞–µ—Ç—Å—è.")

@bot.callback_query_handler(func=lambda call: call.data == "hsix12")
def handle_callback_query_hsix12(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Crye Precision SIX12"), "–í—Ç–æ—Ä–∏—á–∫–∞,–∫–æ—Ç–æ—Ä–∞—è –º–Ω–æ–≥–∏–º –Ω—Ä–∞–≤–∏—Ç—Å—è, –Ω–æ —è –Ω–∏–∫–æ–≥–¥–∞ –µ–µ –Ω–µ –±—Ä–∞–ª –Ω–∞ –ø–µ—Ä–µ–∫—É–ø –∏ –Ω–∞ —é–∑, –∏–±–æ –∫–∞–∫ –ø–æ –º–Ω–µ –µ—Å—Ç—å –ª—É—á—à–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.", is_recommended=False)

@bot.callback_query_handler(func=lambda call: call.data == "hak12")
def handle_callback_query_hak12(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("AK-12"), "AK-12 –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–π –∞–≤—Ç–æ–º–∞—Ç –∏ –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø—Ä–æ—Å–æ–º.")

@bot.callback_query_handler(func=lambda call: call.data == "helb")
def handle_callback_query_helb(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Elbrus Short Range Detector"), "–¢–æ—Ç —Å–∞–º—ã–π –ø—Ä–µ–¥–º–µ—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –Ω–∞ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–µ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–º–∞–ª—ã–µ —Å—É–º–º—ã.")

@bot.callback_query_handler(func=lambda call: call.data.endswith("HISTORY"))
def handle_callback_query_history(call):
    chat_id = call.message.chat.id
    item_name = call.data[:-7]
    send_price_history(chat_id, LocalItem(item_name))


@bot.callback_query_handler(func=lambda call: call.data == "hmaster_weapon")
def handle_callback_query_weapon_master_weapon(call):
    chat_id = call.message.chat.id

    markup = types.InlineKeyboardMarkup(row_width=1)
    button_jag = types.InlineKeyboardButton(text="Jagdkommando", callback_data="jag")
    button_xms = types.InlineKeyboardButton(text="HK XM8S", callback_data="xms")
    button_a308 = types.InlineKeyboardButton(text="–ê–ö-308", callback_data="a308")
    button_a12 = types.InlineKeyboardButton(text="AA-12", callback_data="aa12")
    button_vsk = types.InlineKeyboardButton(text="–í–°–ö-94", callback_data="vsk")
    button_fal = types.InlineKeyboardButton(text="FN FAL", callback_data="fal")
    button_parash = types.InlineKeyboardButton(text="Scar-H", callback_data="parash")
    button_ptrd = types.InlineKeyboardButton(text="–ü–¢–†–î-–ú", callback_data="ptrd")

    markup.add(button_jag, button_xms, button_a308, button_a12, button_vsk, button_fal, button_parash, button_ptrd)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏ –æ—Ä—É–∂–∏–µ:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "jag")
def handle_callback_query_jag(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Jagdkommando"), "–û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ª—É—á—à–∏—Ö –Ω–æ–∂–µ–π, –ø–ª—é—Å –æ—Ç–ª–∏—á–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è.")

@bot.callback_query_handler(func=lambda call: call.data == "xms")
def handle_callback_query_xms(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("HK XM8S"), "–ü–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π –ø—É—à–µ–∫, –Ω–æ —è –¥—É–º–∞—é —Å–∫–æ—Ä–æ –æ–Ω–∞ –∑–∞–∏–≥—Ä–∞–µ—Ç.")

@bot.callback_query_handler(func=lambda call: call.data == "a308")
def handle_callback_query_a308(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("AK-308"), "–†–µ–¥–∫–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–≤–∞–ª –ê–ö-308, –∏–±–æ —Ç—è–∂–∫–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–≤–∞–ª—Å—è, —Å–µ–π—á–∞—Å, –∫–æ–≥–¥–∞ –µ–º—É –ø–æ–≤—ã—Å–∏–ª–∏ —Å—Ç–∞—Ç—ã, –¥—É–º–∞—é —Ö–æ—Ä–æ—à–æ –±—É–¥–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å—Å—è.")

@bot.callback_query_handler(func=lambda call: call.data == "aa12")
def handle_callback_query_aa12(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("AA-12"), "–•–æ—Ä–æ—à–∏–π –¥—Ä–æ–±–æ–≤–∏–∫, –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø—Ä–æ—Å–æ–º.")

@bot.callback_query_handler(func=lambda call: call.data == "vsk")
def handle_callback_query_vsk(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("–í–°–ö-94"), "–°–µ–π—á–∞—Å –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–µ—Ç—Å—è, –∏–±–æ –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ —ç–ª–∏—Ç–Ω–æ–≥–æ –∫–µ–π—Å–∞, –∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ –∏–≥—Ä–æ–∫–∏ –Ω–µ –∑–Ω–∞—é—Ç —Ü–µ–Ω—ã –∏ —Å —ç—Ç–æ–≥–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–∞—Ä—É –º–∏–ª–ª–∏–æ–Ω–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä —è –Ω–µ–¥–∞–≤–Ω–æ –∫—É–ø–∏–ª –µ–≥–æ –∑–∞ 10–∫–∫, –∞ –ø—Ä–æ–¥–∞–ª –∑–∞ 13–∫–∫.")

@bot.callback_query_handler(func=lambda call: call.data == "fal")
def handle_callback_query_fal(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("FN FAL"), "–•–æ—Ä–æ—à–∏–π –∞–≤—Ç–æ–º–∞—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —è —Å–¥–µ–ª–∞–ª  –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ—Å—è—Ç–∫–æ–≤ –º–∏–ª–ª–∏–æ–Ω–æ–≤.")

@bot.callback_query_handler(func=lambda call: call.data == "parash")
def handle_callback_query_parash(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("FN SCAR-H"), "–•–æ—Ä–æ—à–∏–π –∞–≤—Ç–æ–º–∞—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —è —Å–¥–µ–ª–∞–ª  –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ—Å—è—Ç–∫–æ–≤ –º–∏–ª–ª–∏–æ–Ω–æ–≤.")

@bot.callback_query_handler(func=lambda call: call.data == "ptrd")
def handle_callback_query_ptrd(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("PTRD-M"), "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –±—Ä–∞–ª –Ω–∞ —é–∑, —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–≤–∞–ª, —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–¥–∞–µ—Ç—Å—è.")

@bot.callback_query_handler(func=lambda call: call.data == "jagHISTORY")
def handle_callback_query_jagHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Jagdkommando"))

@bot.callback_query_handler(func=lambda call: call.data == "xmsHISTORY")
def handle_callback_query_xmsHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("HK XM8S"))

@bot.callback_query_handler(func=lambda call: call.data == "a308HISTORY")
def handle_callback_query_a308HISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("AK-308"))

@bot.callback_query_handler(func=lambda call: call.data == "a12HISTORY")
def handle_callback_query_a12HISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("AA-12"))

@bot.callback_query_handler(func=lambda call: call.data == "vskHISTORY")
def handle_callback_query_vskHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("–í–°–ö-94"))

@bot.callback_query_handler(func=lambda call: call.data == "falHISTORY")
def handle_callback_query_falHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("FN FAL"))

@bot.callback_query_handler(func=lambda call: call.data == "parashHISTORY")
def handle_callback_query_parashHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("FN SCAR-H"))

@bot.callback_query_handler(func=lambda call: call.data == "ptrdHISTORY")
def handle_callback_query_ptrdHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("PTRD-M"))


@bot.callback_query_handler(func=lambda call: call.data == "hlegend_weapon")
def handle_callback_query_weapon_legend_weapon(call):
    chat_id = call.message.chat.id
    # Create an inline keyboard with weapon options
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_gays = types.InlineKeyboardButton(text="–ì–∞—É—Å—Å-–ü—É—à–∫–∞", callback_data="gays")
    markup.add(button_gays)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏ –æ—Ä—É–∂–∏–µ:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "gays")
def handle_callback_query_gays(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Gauss Rifle"), "–°–µ–π—á–∞—Å —É–∂–µ –¥—É–º–∞—é –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –∏—Å–∫–∞—Ç—å –µ–≥–æ –Ω–∞ —Ä—ã–Ω–∫–µ,–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –∫–∞–∫–æ–π-—Ç–æ –∏–≥—Ä–æ–∫ –¥–µ—Ä–∂–∏—Ç –µ–µ –∏ –≤—ã—Å—Ç–∞–≤–∏—Ç –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω.")

@bot.callback_query_handler(func=lambda call: call.data == "gaysHISTORY")
def handle_callback_query_gaysHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Gauss Rifle"))

@bot.callback_query_handler(func=lambda call: call.data == "hveteran_armor")
def handle_callback_query_veteran_armor(call):
    chat_id = call.message.chat.id
    # Create an inline keyboard with weapon options
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_hmag = types.InlineKeyboardButton(text="–ú–∞–≥–Ω–∏—Ç", callback_data="hmag")
    button_htum = types.InlineKeyboardButton(text="–¢—É–º–∞–Ω–∫–∞", callback_data="htum")
    button_htong = types.InlineKeyboardButton(text="–¢–æ–Ω–≥–∞", callback_data="htong")
    button_hirh = types.InlineKeyboardButton(text="–ô–æ—Ä—à", callback_data="hirh")
    button_hspan = types.InlineKeyboardButton(text="–°–ø–∞–Ω–Ω–µ—Ä", callback_data="hspan")
    button_ham = types.InlineKeyboardButton(text="–ê–º–µ—Ç–∏—Å—Ç", callback_data="ham")
    button_hlaz = types.InlineKeyboardButton(text="–õ–∞–∑—É—Ç—á–∏–∫", callback_data="hlaz")
    button_hraz = types.InlineKeyboardButton(text="–†–∞–∑–≤–µ–¥–∫–∞", callback_data="hraz")
    markup.add(button_hmag, button_htum, button_htong, button_hirh, button_hspan, button_ham, button_hlaz, button_hraz)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏ –±—Ä–æ–Ω—é:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "hmag")
def handle_callback_query_hmag(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Magnet Jumpsuit"), "–ú–∞–≥–Ω–∏—Ç-–æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–∫—É–ø–∞–µ–º—ã—Ö –Ω–∞—É—á–Ω—ã—Ö –∫–æ—Å—Ç—é–º–æ–≤. –û–Ω –æ–±–ª–∞–¥–∞–µ—Ç —Ö–æ—Ä–æ—à–µ–π –∑–∞—â–∏—Ç–æ–π –æ—Ç –∑–∞—Ä–∞–∂–µ–Ω–∏–π –∏ –ª–µ–≥–∫–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–µ—Ç—Å—è.")

@bot.callback_query_handler(func=lambda call: call.data == "hmagHISTORY")
def handle_callback_query_hmagHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Magnet Jumpsuit"))

@bot.callback_query_handler(func=lambda call: call.data == "htum")
def handle_callback_query_htum(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Fog Hunter Heavy Armored Suit"), "–¢—É–º–∞–Ω–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫-–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø—Ä–æ—Å–æ–º, –ù–æ –Ω–µ —Ç–∞–∫ –∫–∞–∫ —Ä–∞–Ω—å—à–µ.")

@bot.callback_query_handler(func=lambda call: call.data == "htumHISTORY")
def handle_callback_query_htumHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Fog Hunter Heavy Armored Suit"))

@bot.callback_query_handler(func=lambda call: call.data == "htong")
def handle_callback_query_htong(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Tonga Jumpsuit"), "–¢–æ–Ω–≥–∞-–æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–∫—É–ø–∞–µ–º—ã—Ö –Ω–∞—É—á–Ω—ã—Ö –∫–æ—Å—Ç—é–º–æ–≤. –û–Ω –æ–±–ª–∞–¥–∞–µ—Ç —Ö–æ—Ä–æ—à–µ–π –∑–∞—â–∏—Ç–æ–π –æ—Ç –∑–∞—Ä–∞–∂–µ–Ω–∏–π –∏ –ª–µ–≥–∫–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–µ—Ç—Å—è.")

@bot.callback_query_handler(func=lambda call: call.data == "htongHISTORY")
def handle_callback_query_htongHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Tonga Jumpsuit"))

@bot.callback_query_handler(func=lambda call: call.data == "hirh")
def handle_callback_query_hirh(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Yorsh Protective Armored Suit"), "–ô–æ—Ä—à –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Å–æ–±—ã–º —Å–ø—Ä–æ–º–æ, –Ω–æ —Å–∫–æ—Ä–æ –¥–æ–±–∞–≤—è—Ç –¥–∞–Ω–∂–∏ –∏ –æ–Ω –±—É–¥–µ—Ç –¥–æ—Ä–æ–∂–µ. –ù–∞–ø—Ä–∏–º–µ—Ä –≤ –Ω–∞—á–∞–ª–µ —Å–≤–æ–µ–≥–æ –ø—É—Ç–∏ —è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∑–∞–∫—É–ø–∞–ª—Å—è –ø–µ—Ä–µ–¥ —Å—Ä–µ–¥–æ–π —Å—Ö–µ–º—ã –π–æ—Ä—à–∞.")

@bot.callback_query_handler(func=lambda call: call.data == "hirhHISTORY")
def handle_callback_query_hirhHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Yorsh Protective Armored Suit"))

@bot.callback_query_handler(func=lambda call: call.data == "hspan")
def handle_callback_query_hspan(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("RAPS Spanner"), "–†–µ–¥–∫–æ –≤–∏–∂—É –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–ø–∞–Ω–Ω–µ—Ä–∞, –ù–æ –ø—Ä–æ–¥–∞–≤–∞–ª–∏—Å—å –æ–Ω–∏ —É –º–µ–Ω—è –±—ã—Å—Ç—Ä–æ.")

@bot.callback_query_handler(func=lambda call: call.data == "hspanHISTORY")
def handle_callback_query_hspanHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("RAPS Spanner"))

@bot.callback_query_handler(func=lambda call: call.data == "ham")
def handle_callback_query_ham(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("MIS-122 Amethyst"), "–†–∞–Ω–µ–µ —Å—Ç–æ–∏–ª –º–µ–Ω–µ–µ 2 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –∏ –º–æ–∂–Ω–æ –±—ã–ª–æ —Å –Ω–µ–≥–æ –ª–µ–≥–∫–æ –¥–µ–ª–∞—Ç—å 300-500–∫, —Å–µ–π—á–∞—Å –¥–æ—Ä–æ–≥–æ–π –∏ –Ω–µ –ø–æ–Ω–∏–º–∞—é –∑–∞—á–µ–º –ª—é–¥–∏ –µ–≥–æ –ø–æ–∫—É–ø–∞—é—Ç, –∏–±–æ –æ–Ω –µ—Å—Ç—å –≤ –±–∞—Ä—Ç–µ—Ä–µ.")

@bot.callback_query_handler(func=lambda call: call.data == "hamHISTORY")
def handle_callback_query_hamHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("MIS-122 Amethyst"))

@bot.callback_query_handler(func=lambda call: call.data == "hlaz")
def handle_callback_query_hlaz(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Albatross Infiltrator Armored Exoskeleton"), "–ü–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø—Ä–æ—Å–æ–º —É –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ö–æ—Ç—è—Ç –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ –≤–µ—Ç–µ—Ä–∞–Ω–æ–∫.")

@bot.callback_query_handler(func=lambda call: call.data == "hlazHISTORY")
def handle_callback_query_hlazHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Albatross Infiltrator Armored Exoskeleton"))

@bot.callback_query_handler(func=lambda call: call.data == "hraz")
def handle_callback_query_hraz(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Albatross Scout Armored Exoskeleton"), "–ü–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø—Ä–æ—Å–æ–º —É –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ö–æ—Ç—è—Ç –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ –≤–µ—Ç–µ—Ä–∞–Ω–æ–∫.")

@bot.callback_query_handler(func=lambda call: call.data == "hrazHISTORY")
def handle_callback_query_hrazHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Albatross Scout Armored Exoskeleton"))

@bot.callback_query_handler(func=lambda call: call.data == "hmaster_armor")
def handle_callback_query_master_armor(call):
    chat_id = call.message.chat.id
    # Create an inline keyboard with weapon options
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_hzivk = types.InlineKeyboardButton(text="–ó–∏–≤–∫–∞—Å", callback_data="hzivk")
    button_hrig = types.InlineKeyboardButton(text="–†–∏–≥–µ–ª—å", callback_data="hrig")
    button_hkz = types.InlineKeyboardButton(text="–ö–ó-4", callback_data="hkz")
    button_htank = types.InlineKeyboardButton(text="–¢–∞–Ω–∫", callback_data="htank")
    button_hmod = types.InlineKeyboardButton(text="–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫–∑–æ—Å–∫–µ–ª–µ—Ç", callback_data="hmod")
    markup.add(button_hzivk, button_hrig, button_hkz, button_htank, button_hmod)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏ –±—Ä–æ–Ω—é:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "hzivk")
def handle_callback_query_hzivk(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("JD ZIVCAS 2A Exoarmor"), "ZIVCAS-–æ–±–ª–∞–¥–∞–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º–∏ —Å—Ç–∞—Ç–∞–º–∏ –∏ –∂–µ–ª–∞—é—â–∏—Ö –∫—É–ø–∏—Ç—å –µ–≥–æ –Ω–µ–º–∞–ª–æ.")

@bot.callback_query_handler(func=lambda call: call.data == "hrig")
def handle_callback_query_hrig(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Rigel Jumpsuit"), "–†–∏–≥–µ–ª—å-–æ–±–ª–∞–¥–∞–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º–∏ —Å—Ç–∞—Ç–∞–º–∏ –∏ –∂–µ–ª–∞—é—â–∏—Ö –∫—É–ø–∏—Ç—å –µ–≥–æ –Ω–µ–º–∞–ª–æ.")

@bot.callback_query_handler(func=lambda call: call.data == "hkz")
def handle_callback_query_hkz(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("CD-4 Armored Suit"), "–ö–ó-4 –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∞—è –±—Ä–æ–Ω—è, –ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ø–æ—Ä–æ—Å–æ–º —É –ª—é–±–∏—Ç–µ–ª–µ–π –ø–∫–∞—à–∏—Ç—å –∏–ª–∏ –¥–ª—è –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π–Ω, —Å –Ω–µ–≥–æ –ª–µ–≥–∫–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å 1-3–∫–∫ –æ–∫—É–ø–∞.")

@bot.callback_query_handler(func=lambda call: call.data == "htank")
def handle_callback_query_htank(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("SBA TANK"), "SBA TANK –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∞—è –±—Ä–æ–Ω—è, –ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ø–æ—Ä–æ—Å–æ–º —É –ª—é–±–∏—Ç–µ–ª–µ–π –ø–∫–∞—à–∏—Ç—å –∏–ª–∏ –¥–ª—è –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π–Ω.")

@bot.callback_query_handler(func=lambda call: call.data == "hmod")
def handle_callback_query_hmod(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Modified Exoskeleton"), "–ú–æ–¥–∫–∞ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∞—è –±—Ä–æ–Ω—è, –ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ø–æ—Ä–æ—Å–æ–º —É –ª—é–±–∏—Ç–µ–ª–µ–π –ø–∫–∞—à–∏—Ç—å –∏–ª–∏ –¥–ª—è –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π–Ω, —Å –Ω–µ–≥–æ –ª–µ–≥–∫–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å 1-3–∫–∫ –æ–∫—É–ø–∞.")


@bot.callback_query_handler(func=lambda call: call.data == "hzivkHISTORY")
def handle_callback_query_hzivkHISTORY(call):
    chat_id = call.message.chat.id  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º chat.id
    send_price_history(chat_id, LocalItem("JD ZIVCAS 2A Exoarmor"))

@bot.callback_query_handler(func=lambda call: call.data == "hrigHISTORY")
def handle_callback_query_hrigHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Rigel Jumpsuit"))

@bot.callback_query_handler(func=lambda call: call.data == "hkzHISTORY")
def handle_callback_query_hkzHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("CD-4 Armored Suit"))

@bot.callback_query_handler(func=lambda call: call.data == "htankHISTORY")
def handle_callback_query_htankHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("SBA TANK"))

@bot.callback_query_handler(func=lambda call: call.data == "hmodHISTORY")
def handle_callback_query_hmodHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Modified Exoskeleton"))


@bot.callback_query_handler(func=lambda call: call.data == "hlegend_armor")
def handle_callback_query_legend_armor(call):
    chat_id = call.message.chat.id
    # Create an inline keyboard with weapon options
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_hshrm = types.InlineKeyboardButton(text="–ê–ª—å–±–∞—Ç—Ä–æ—Å-–®—Ç—É—Ä–º–æ–≤–∏–∫", callback_data="hshrm")
    markup.add(button_hshrm)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏ –±—Ä–æ–Ω—é:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "hshrm")
def handle_callback_query_hshrm(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Albatross Heavy Assault Armored Exoskeleton"), "")

@bot.callback_query_handler(func=lambda call: call.data == "a16HISTORY")
def handle_callback_query_a16HISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Albatross Heavy Assault Armored Exoskeleton"))

@bot.callback_query_handler(func=lambda call: call.data == "hcont")
def handle_callback_query_cont(call):
    chat_id = call.message.chat.id
    from auc import user_threads
    if chat_id in user_threads:
        bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id,
                         text="–í—ã —É–∂–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç–µ –ª–æ—Ç‚ùó\n–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–µ–∫—É—â–µ–≥–æ –ª–æ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–π.\n–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop")
        return
    markup = types.InlineKeyboardMarkup(row_width=1)
    button_six = types.InlineKeyboardButton(text="–ë–µ—Ä–ª–æ–≥–∞ 6—É", callback_data="hsix")
    button_four = types.InlineKeyboardButton(text="–ë–µ—Ä–ª–æ–≥–∞ 4—É", callback_data="hfour")
    button_hksm = types.InlineKeyboardButton(text="–ö–°–ú", callback_data="hksm")
    markup.add(button_four, button_six, button_hksm)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text="–•–æ—Ä–æ—à–æ! –í—ã–±–µ—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:", reply_markup=markup)

# Handler for "–ë–µ—Ä–ª–æ–≥–∞ 6—É"
@bot.callback_query_handler(func=lambda call: call.data == "hsix")
def handle_callback_query_hsix(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Berloga-6u Container"), "–ë–µ—Ä–ª–æ–≥–∞ 6—É - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ª–µ–∑–Ω—ã—Ö –≤–µ—â–µ–π.")

# Handler for "–ë–µ—Ä–ª–æ–≥–∞ 6—É" history
@bot.callback_query_handler(func=lambda call: call.data == "hsixHISTORY")
def handle_callback_query_hsixHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Berloga-6u Container"))

# Handler for "–ë–µ—Ä–ª–æ–≥–∞ 4—É"
@bot.callback_query_handler(func=lambda call: call.data == "hfour")
def handle_callback_query_hfour(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("Berloga-4u Container"), "–ë–µ—Ä–ª–æ–≥–∞ 4—É - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤–µ—â–µ–π, –Ω–æ –±–æ–ª–µ–µ –¥–æ—Ä–æ–≥–æ–π.")

# Handler for "–ë–µ—Ä–ª–æ–≥–∞ 4—É" history
@bot.callback_query_handler(func=lambda call: call.data == "hfourHISTORY")
def handle_callback_query_hfourHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("Berloga-4u Container"))

# Handler for "–ö–°–ú"
@bot.callback_query_handler(func=lambda call: call.data == "hksm")
def handle_callback_query_hksm(call):
    chat_id = call.message.chat.id
    send_lot_info(chat_id, LocalItem("SMC Container"), "–ö–°–ú - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–µ—à–µ–≤—ã—Ö –≤–µ—â–µ–π.")

# Handler for "–ö–°–ú" history
@bot.callback_query_handler(func=lambda call: call.data == "hksmHISTORY")
def handle_callback_query_hksmHISTORY(call):
    chat_id = call.message.chat.id
    send_price_history(chat_id, LocalItem("SMC Container"))